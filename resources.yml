### Instalação ingress
# https://kubernetes.github.io/ingress-nginx/deploy/#quick-start
# kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.1/deploy/static/provider/cloud/deploy.yaml

# kubectl create ingress goldpinger --class=nginx --rule=goldpinger.stone.com.br/*=goldpinger:8080
# kubectl port-forward --namespace=ingress-nginx service/ingress-nginx-controller 8080:80
# Acessar http://goldpinger.stone.com.br:8080/

# Teste DEMO
# kubectl create deployment demo --image=httpd --port=80
# kubectl expose deployment demo
# kubectl create ingress demo-localhost --class=nginx --rule=demo.localdev.me/*=demo:80
# kubectl port-forward --namespace=ingress-nginx service/ingress-nginx-controller 8080:80
# Acessar http://demo.localdev.me:8080/

# Prometheus
# kubectl create ingress prometheus-operated --class=nginx --rule=prometheus-operated.stone.com.br/*=prometheus-operated:9090 -n monitoring
# kubectl create ingress kube-prometheus-stack-prometheus --class=nginx --rule=kube-prometheus-stack-prometheus.stone.com.br/*=kube-prometheus-stack-prometheus:9090 -n monitoring

---
#apiVersion: rbac.authorization.k8s.io/v1beta1
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: ServiceAccount
    name: goldpinger-serviceaccount
    namespace: default
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: goldpinger-serviceaccount
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: goldpinger
  namespace: default
  labels:
    app: goldpinger
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: goldpinger
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
      labels:
        app: goldpinger
    spec:
      serviceAccount: goldpinger-serviceaccount
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
        - name: goldpinger
          env:
            - name: HOST
              value: "0.0.0.0"
            - name: PORT
              value: "8080"
            # injecting real hostname will make for easier to understand graphs/metrics
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # podIP is used to select a randomized subset of nodes to ping.
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: "docker.io/bloomberg/goldpinger:v3.0.0"
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          resources:
            limits:
              memory: 80Mi
            requests:
              cpu: 1m
              memory: 40Mi
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: goldpinger
  namespace: default
  labels:
    app: goldpinger
spec:
  type: NodePort
  ports:
    - port: 8080
      nodePort: 30080
      name: http
  selector:
    app: goldpinger
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: goldpinger
  namespace: default
  labels:
    app: goldpinger
spec:
  ingressClassName: nginx
  rules:
  - host: goldpinger.stone.com.br
    http:
      paths:
      - backend:
          service:
            name: goldpinger
            port:
              number: 8080
        path: /
        pathType: Prefix
